//
// AutoAPITests
// Copyright (C) 2019 High-Mobility GmbH
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see http://www.gnu.org/licenses/.
//
// Please inquire about commercial licensing options at
// licensing@high-mobility.com
//
//
//  AACapabilityTests.swift
//  AutoAPITests
//
//  Created by Mikk Rätsep on 08/04/2019.
//  Copyright © 2019 High Mobility GmbH. All rights reserved.
//

@testable import AutoAPI
import HMUtilities
import XCTest


class AACapabilityTests: XCTestCase {

    static var allTests = [("testDebugTree", testDebugTree)]


    // MARK: XCTestCase

    func testDebugTree() {
        // Vehicle Status
        let hex

        // Capabilities
        let hex2 = "0010010100080100050020000112010008010005002100011201000901000600230001121301000D01000A0024000112131415161701000801000500250001120100090100060026000112130100090100060027000112040100080100050028000112010006010003002912010007010004003000010100080100050031000112"

        // Lights-Colour
        let hex3 = "0036010100040100010202000401000101040006010003 FF0000 0500040100010006000401000100070005010002000007000501000201010800050100020000080005010002010109000501000200000900050100020100"

        // This is insane to test...
        XCTAssertNotNil(AutoAPI.parseBinary(hex1.hexBytes)?.debugTree.stringValue)
        XCTAssertNotNil(AutoAPI.parseBinary(hex2.hexBytes)?.debugTree.stringValue)
        XCTAssertNotNil(AutoAPI.parseBinary(hex3.hexBytes)?.debugTree.stringValue)
    }
}
